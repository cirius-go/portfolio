name: Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      target:
        description: 'Target stage to deploy'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: dev
env:
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_CLOUD_URL: https://api.pulumi.com
  ESC_ACTION_OIDC_ORGANZATION: cirius-go
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: cirius-go/portfolio-frontend/dev
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_SESSION_TOKEN
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TARGET: ${{ github.event.inputs.target || 'dev' }}
    defaults:
      run:
        shell: bash
        working-directory: .
    strategy:
      matrix:
        project: [cms, portfolio]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Install go-task/task to run Taskfile commands
        uses: arduino/setup-task@v2
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ./workspace/node_modules
          key: ${{ runner.os }}-npm-apps-${{ hashFiles('./workspace/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-apps-
      - name: Cache deployment node modules
        uses: actions/cache@v4
        with:
          path: ./deployment/aws/node_modules
          key: ${{ runner.os }}-npm-deployment-${{ hashFiles('./deployment/aws/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-deployment-
      - name: Install dependencies
        run: cd workspace && npm ci
      - name: Install deployment dependencies
        run: cd deployment/aws && npm ci
      - name: Build ${{ matrix.project }}
        run: task build:${{ env.TARGET }} -- ${{ matrix.project }}
