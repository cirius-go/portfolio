version: '3'
tasks:
  installDeps:ci:
    cmds:
      - cd ./workspace && npm ci
  build:
    desc: 'Build project'
    cmds:
      - ./scripts/build.sh {{ .CLI_ARGS }}
    internal: true
  build:dev:
    desc: "Build all apps for dev"
    cmds:
      - task: build
        vars:
          CLI_ARGS: dev {{ .CLI_ARGS | default "cms,portfolio" }}
  env:edit:
    desc: 'Edit environment'
    cmds:
      - esc env edit {{ .PROJECT }}/{{ .STAGE | default "dev" }}
  env:show:
    desc: 'Show environment'
    cmds:
      - esc env open  {{ .PROJECT }}/{{ .STAGE | default "dev" }} -f dotenv
  env:set:
    desc: 'Set environment'
    cmds:
      - esc env set {{ .PROJECT }}/{{ .STAGE | default "dev" }} {{ .CLI_ARGS }}
  env:rm:
    desc: 'Remove environment'
    cmds:
      - esc env rm {{ .PROJECT }}/{{ .STAGE | default "dev" }} {{ .CLI_ARGS }}
  env:dev:edit:
    desc: 'Edit dev environment'
    cmds:
      - task: env:edit
        vars:
          STAGE: dev
  env:dev:show:
    desc: 'Show dev environment'
    cmds:
      - task: env:show
        vars:
          STAGE: dev
  env:dev:set:
    desc: 'Set dev environment'
    cmds:
      - task: env:set
        vars:
          STAGE: dev
  env:dev:rm:
    desc: 'Remove dev environment'
    cmds:
      - task: env:rm
        vars:
          STAGE: dev
  deploy:
    desc: 'Deploy to AWS'
    cmds:
      - task: build:{{ .STAGE | default "dev" }}
      - pulumi up -C ./deployment/aws -s {{ .PROJECT }}/{{ .STAGE | default "dev" }}
      - task: stack:output
  deploy:check:
    desc: "Checking deployment permissions"
    cmds:
      - pulumi refresh -C ./deployment/aws -s {{ .PROJECT }}/{{ .STAGE | default "dev" }}
  stack:output:
    desc: 'Show stack outputs'
    cmds:
      - pulumi -C ./deployment/aws stack output --json
  deploy:dev:
    desc: 'Deploy to AWS dev environment'
    cmds:
      - task: deploy
        vars:
          STAGE: dev
  test:github-ci:
    desc: 'Test github CI at local'
    cmds:
      - act --container-architecture linux/amd64
